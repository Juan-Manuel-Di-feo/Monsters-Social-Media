{"version":3,"sources":["Component/Card/card.component.jsx","Component/Card-list/Card-list.component.jsx","Component/Search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAEaA,EAAO,SAACC,GAAD,OACpB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAM,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,eACxB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCFVC,G,MAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAY,YAAjB,SACMD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJtBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAZ,UAAY,SACZa,KAAK,SACLF,YAAcA,EACdG,SAAUF,MCkCCG,E,kDApCb,aAAc,IAAD,8BACX,gBAOFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAPtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJJ,E,qDAab,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAE3C,WAAU,IAAD,EACyBC,KAAKN,MAA9Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK9B,UAAY,MAAjB,UACE,kDACA,cAAC,EAAD,CACAW,YAAc,yBACdC,aAAgBe,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAYoB,W,GA/BZI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2380b630.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\nexport const Card = (props) => ( \r\n<div className = 'card-container'>\r\n    <img alt = \"monster\" src = {`https://robohash.org/${props.monster.id}?set=set2`}/>\r\n    <h2>{props.monster.name}</h2>\r\n    <h3>{props.monster.email}</h3>\r\n</div>\r\n)","import React from 'react';\r\nimport {Card} from '../Card/card.component'\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = props => {\r\n    return <div className = 'card-list'>\r\n                {props.monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster}/>\r\n                ))}\r\n            </div>\r\n}","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input \r\n    className = 'search'\r\n    type='search' \r\n    placeholder= {placeholder}\r\n    onChange={handleChange}\r\n    />\r\n)","import './App.css';\nimport React, { Component } from 'react';\nimport {CardList} from './Component/Card-list/Card-list.component'\nimport {SearchBox} from './Component/Search-box/search-box.component'\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n  \n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users }));\n  }\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return(\n      <div className = 'App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n        placeholder = 'Type here to search...'\n        handleChange = {this.handleChange}\n        />\n        <CardList monsters = {filteredMonsters}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}